// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<WebApp /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WebApp
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Redirect
          from="/"
          push={false}
          to="/login"
        />,
        <WithStyles(CircularProgress)
          size={100}
          style={
            Object {
              "bottom": "50%",
              "left": "50%",
              "position": "fixed",
              "right": "50%",
              "top": "50%",
            }
          }
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "from": "/",
          "push": false,
          "to": "/login",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "size": 100,
          "style": Object {
            "bottom": "50%",
            "left": "50%",
            "position": "fixed",
            "right": "50%",
            "top": "50%",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Redirect
            from="/"
            push={false}
            to="/login"
          />,
          <WithStyles(CircularProgress)
            size={100}
            style={
              Object {
                "bottom": "50%",
                "left": "50%",
                "position": "fixed",
                "right": "50%",
                "top": "50%",
              }
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "from": "/",
            "push": false,
            "to": "/login",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "size": 100,
            "style": Object {
              "bottom": "50%",
              "left": "50%",
              "position": "fixed",
              "right": "50%",
              "top": "50%",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
