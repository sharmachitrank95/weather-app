// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Login /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    cityName="chandigarh"
    setCurrentLocation={[Function]}
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alignItems": "center",
      "children": <WithStyles(Grid)
        item={true}
        style={
          Object {
            "flexGrow": 1,
          }
        }
      >
        <WithStyles(AppBar)
          position="static"
          style={
            Object {
              "flexDirection": "row",
              "flexGrow": 1,
            }
          }
        >
          <WithStyles(Toolbar)
            style={
              Object {
                "flexDirection": "row",
                "flexGrow": 1,
              }
            }
          >
            <WithStyles(Grid)
              id="welcomeUser"
              item={true}
              style={
                Object {
                  "flexGrow": 1,
                }
              }
            >
               Welcome 
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
            >
              chandigarh
            </WithStyles(Grid)>
            <WithStyles(Link)
              onClick={[Function]}
              style={
                Object {
                  "color": "white",
                  "cursor": "pointer",
                  "padding": "1rem",
                }
              }
            >
              <i>
                choose current location
              </i>
            </WithStyles(Link)>
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
                variant="contained"
              >
                Logout
              </WithStyles(Button)>
            </WithStyles(Grid)>
          </WithStyles(Toolbar)>
        </WithStyles(AppBar)>
      </WithStyles(Grid)>,
      "container": true,
      "style": Object {
        "marginBottom": "1rem",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(AppBar)
          position="static"
          style={
            Object {
              "flexDirection": "row",
              "flexGrow": 1,
            }
          }
        >
          <WithStyles(Toolbar)
            style={
              Object {
                "flexDirection": "row",
                "flexGrow": 1,
              }
            }
          >
            <WithStyles(Grid)
              id="welcomeUser"
              item={true}
              style={
                Object {
                  "flexGrow": 1,
                }
              }
            >
               Welcome 
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
            >
              chandigarh
            </WithStyles(Grid)>
            <WithStyles(Link)
              onClick={[Function]}
              style={
                Object {
                  "color": "white",
                  "cursor": "pointer",
                  "padding": "1rem",
                }
              }
            >
              <i>
                choose current location
              </i>
            </WithStyles(Link)>
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
                variant="contained"
              >
                Logout
              </WithStyles(Button)>
            </WithStyles(Grid)>
          </WithStyles(Toolbar)>
        </WithStyles(AppBar)>,
        "item": true,
        "style": Object {
          "flexGrow": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Toolbar)
            style={
              Object {
                "flexDirection": "row",
                "flexGrow": 1,
              }
            }
          >
            <WithStyles(Grid)
              id="welcomeUser"
              item={true}
              style={
                Object {
                  "flexGrow": 1,
                }
              }
            >
               Welcome 
            </WithStyles(Grid)>
            <WithStyles(Grid)
              item={true}
            >
              chandigarh
            </WithStyles(Grid)>
            <WithStyles(Link)
              onClick={[Function]}
              style={
                Object {
                  "color": "white",
                  "cursor": "pointer",
                  "padding": "1rem",
                }
              }
            >
              <i>
                choose current location
              </i>
            </WithStyles(Link)>
            <WithStyles(Grid)
              item={true}
            >
              <WithStyles(Button)
                onClick={[Function]}
                variant="contained"
              >
                Logout
              </WithStyles(Button)>
            </WithStyles(Grid)>
          </WithStyles(Toolbar)>,
          "position": "static",
          "style": Object {
            "flexDirection": "row",
            "flexGrow": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(Grid)
                id="welcomeUser"
                item={true}
                style={
                  Object {
                    "flexGrow": 1,
                  }
                }
              >
                 Welcome 
              </WithStyles(Grid)>,
              <WithStyles(Grid)
                item={true}
              >
                chandigarh
              </WithStyles(Grid)>,
              <WithStyles(Link)
                onClick={[Function]}
                style={
                  Object {
                    "color": "white",
                    "cursor": "pointer",
                    "padding": "1rem",
                  }
                }
              >
                <i>
                  choose current location
                </i>
              </WithStyles(Link)>,
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                  variant="contained"
                >
                  Logout
                </WithStyles(Button)>
              </WithStyles(Grid)>,
            ],
            "style": Object {
              "flexDirection": "row",
              "flexGrow": 1,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  " Welcome ",
                  null,
                ],
                "id": "welcomeUser",
                "item": true,
                "style": Object {
                  "flexGrow": 1,
                },
              },
              "ref": null,
              "rendered": Array [
                " Welcome ",
                null,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "chandigarh",
                "item": true,
              },
              "ref": null,
              "rendered": "chandigarh",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <i>
                  choose current location
                </i>,
                "onClick": [Function],
                "style": Object {
                  "color": "white",
                  "cursor": "pointer",
                  "padding": "1rem",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "choose current location",
                },
                "ref": null,
                "rendered": "choose current location",
                "type": "i",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Button)
                  onClick={[Function]}
                  variant="contained"
                >
                  Logout
                </WithStyles(Button)>,
                "item": true,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Logout",
                  "onClick": [Function],
                  "variant": "contained",
                },
                "ref": null,
                "rendered": "Logout",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alignItems": "center",
        "children": <WithStyles(Grid)
          item={true}
          style={
            Object {
              "flexGrow": 1,
            }
          }
        >
          <WithStyles(AppBar)
            position="static"
            style={
              Object {
                "flexDirection": "row",
                "flexGrow": 1,
              }
            }
          >
            <WithStyles(Toolbar)
              style={
                Object {
                  "flexDirection": "row",
                  "flexGrow": 1,
                }
              }
            >
              <WithStyles(Grid)
                id="welcomeUser"
                item={true}
                style={
                  Object {
                    "flexGrow": 1,
                  }
                }
              >
                 Welcome 
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
              >
                chandigarh
              </WithStyles(Grid)>
              <WithStyles(Link)
                onClick={[Function]}
                style={
                  Object {
                    "color": "white",
                    "cursor": "pointer",
                    "padding": "1rem",
                  }
                }
              >
                <i>
                  choose current location
                </i>
              </WithStyles(Link)>
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                  variant="contained"
                >
                  Logout
                </WithStyles(Button)>
              </WithStyles(Grid)>
            </WithStyles(Toolbar)>
          </WithStyles(AppBar)>
        </WithStyles(Grid)>,
        "container": true,
        "style": Object {
          "marginBottom": "1rem",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(AppBar)
            position="static"
            style={
              Object {
                "flexDirection": "row",
                "flexGrow": 1,
              }
            }
          >
            <WithStyles(Toolbar)
              style={
                Object {
                  "flexDirection": "row",
                  "flexGrow": 1,
                }
              }
            >
              <WithStyles(Grid)
                id="welcomeUser"
                item={true}
                style={
                  Object {
                    "flexGrow": 1,
                  }
                }
              >
                 Welcome 
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
              >
                chandigarh
              </WithStyles(Grid)>
              <WithStyles(Link)
                onClick={[Function]}
                style={
                  Object {
                    "color": "white",
                    "cursor": "pointer",
                    "padding": "1rem",
                  }
                }
              >
                <i>
                  choose current location
                </i>
              </WithStyles(Link)>
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                  variant="contained"
                >
                  Logout
                </WithStyles(Button)>
              </WithStyles(Grid)>
            </WithStyles(Toolbar)>
          </WithStyles(AppBar)>,
          "item": true,
          "style": Object {
            "flexGrow": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Toolbar)
              style={
                Object {
                  "flexDirection": "row",
                  "flexGrow": 1,
                }
              }
            >
              <WithStyles(Grid)
                id="welcomeUser"
                item={true}
                style={
                  Object {
                    "flexGrow": 1,
                  }
                }
              >
                 Welcome 
              </WithStyles(Grid)>
              <WithStyles(Grid)
                item={true}
              >
                chandigarh
              </WithStyles(Grid)>
              <WithStyles(Link)
                onClick={[Function]}
                style={
                  Object {
                    "color": "white",
                    "cursor": "pointer",
                    "padding": "1rem",
                  }
                }
              >
                <i>
                  choose current location
                </i>
              </WithStyles(Link)>
              <WithStyles(Grid)
                item={true}
              >
                <WithStyles(Button)
                  onClick={[Function]}
                  variant="contained"
                >
                  Logout
                </WithStyles(Button)>
              </WithStyles(Grid)>
            </WithStyles(Toolbar)>,
            "position": "static",
            "style": Object {
              "flexDirection": "row",
              "flexGrow": 1,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(Grid)
                  id="welcomeUser"
                  item={true}
                  style={
                    Object {
                      "flexGrow": 1,
                    }
                  }
                >
                   Welcome 
                </WithStyles(Grid)>,
                <WithStyles(Grid)
                  item={true}
                >
                  chandigarh
                </WithStyles(Grid)>,
                <WithStyles(Link)
                  onClick={[Function]}
                  style={
                    Object {
                      "color": "white",
                      "cursor": "pointer",
                      "padding": "1rem",
                    }
                  }
                >
                  <i>
                    choose current location
                  </i>
                </WithStyles(Link)>,
                <WithStyles(Grid)
                  item={true}
                >
                  <WithStyles(Button)
                    onClick={[Function]}
                    variant="contained"
                  >
                    Logout
                  </WithStyles(Button)>
                </WithStyles(Grid)>,
              ],
              "style": Object {
                "flexDirection": "row",
                "flexGrow": 1,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    " Welcome ",
                    null,
                  ],
                  "id": "welcomeUser",
                  "item": true,
                  "style": Object {
                    "flexGrow": 1,
                  },
                },
                "ref": null,
                "rendered": Array [
                  " Welcome ",
                  null,
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "chandigarh",
                  "item": true,
                },
                "ref": null,
                "rendered": "chandigarh",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <i>
                    choose current location
                  </i>,
                  "onClick": [Function],
                  "style": Object {
                    "color": "white",
                    "cursor": "pointer",
                    "padding": "1rem",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "choose current location",
                  },
                  "ref": null,
                  "rendered": "choose current location",
                  "type": "i",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(Button)
                    onClick={[Function]}
                    variant="contained"
                  >
                    Logout
                  </WithStyles(Button)>,
                  "item": true,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Logout",
                    "onClick": [Function],
                    "variant": "contained",
                  },
                  "ref": null,
                  "rendered": "Logout",
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
