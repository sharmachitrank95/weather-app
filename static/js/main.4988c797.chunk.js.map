{"version":3,"sources":["component/Login.tsx","service/Action.tsx","component/Header.tsx","component/DateNavigator.tsx","component/WeatherCards.tsx","component/WeatherReport.tsx","component/WebApp.tsx","service/Reducer.tsx","index.tsx"],"names":["Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userName","password","onSubmitClick","bind","assertThisInitialized","handleNameChange","handlePasswordChange","renderRedirect","inherits","createClass","key","value","localStorage","getItem","length","react_default","a","createElement","Redirect","to","process","e","store","dispatch","type","payload","location","reload","setState","target","index_es","container","direction","alignItems","justify","style","height","item","padding","id","placeholder","required","autoComplete","onChange","variant","disabled","onClick","React","Component","Header","getState","username","marginBottom","flexGrow","position","flexDirection","cityName","color","cursor","setCurrentLocation","getListItemStyle","match","backgroundColor","DateNavigator","dates","map","date","button","component","handleDateChange","currentDate","xs","paddingLeft","WeatherCards","cards","WeatherCardData","cardData","dt_txt","split","weather","description","main","temp_max","temp_min","pressure","humidity","spacing","WeatherReport","availableDates","cardsData","setCardData","fetchAvailableDates","_this2","weatherData","list","element","indexOf","push","data","_","DateNavigator_DateNavigator","WeatherCards_WeatherCards","WebApp","xCoordinate","yCoordinate","isBusy","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getData","nextProps","nextState","city","name","_this3","fetch","headers","Content-Type","Access-Type","then","json","weatherReport","spinner","Header_Header","WeatherReport_WeatherReport","top","right","left","bottom","size","Fragment","initialState","createStore","arguments","undefined","action","setItem","console","log","assign","routing","BrowserRouter","es_Redirect","exact","from","Route","path","render","component_Login","component_WebApp","ReactDOM","document","getElementById","subscribe"],"mappings":"4OAoBO,IAoDQA,EApDf,SAAAC,GACI,SAAAD,EAAYE,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACpBG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,CAACC,SAAS,GAAGC,SAAS,IACnCT,EAAKU,cAAgBV,EAAKU,cAAcC,KAAnBV,OAAAW,EAAA,EAAAX,CAAAD,IACrBA,EAAKa,iBAAmBb,EAAKa,iBAAiBF,KAAtBV,OAAAW,EAAA,EAAAX,CAAAD,IACxBA,EAAKc,qBAAuBd,EAAKc,qBAAqBH,KAA1BV,OAAAW,EAAA,EAAAX,CAAAD,IAC5BA,EAAKe,eAAiBf,EAAKe,eAAeJ,KAApBV,OAAAW,EAAA,EAAAX,CAAAD,IANFA,EAD5B,OAAAC,OAAAe,EAAA,EAAAf,CAAAJ,EAAAC,GAAAG,OAAAgB,EAAA,EAAAhB,CAAAJ,EAAA,EAAAqB,IAAA,iBAAAC,MAAA,WAWQ,GAAMC,aAAaC,QAAQ,aAAeD,aAAaC,QAAQ,YAAaC,OAAS,EACnF,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAIC,0BAZ/B,CAAAV,IAAA,gBAAAC,MAAA,SAgBkBU,GACV1B,KAAKJ,MAAM+B,MAAMC,SClCf,CACNC,KAAM,QACNC,QAAS,CAACzB,SDgC8BL,KAAKI,MAAMC,YAC/CL,KAAKY,iBACLmB,SAASC,WAnBjB,CAAAjB,IAAA,mBAAAC,MAAA,SAsBqBU,GACb1B,KAAKiC,SAAS,CACV5B,SAAUqB,EAAEQ,OAAOlB,UAxB/B,CAAAD,IAAA,uBAAAC,MAAA,SA4ByBU,GACjB1B,KAAKiC,SAAS,CACV3B,SAASoB,EAAEQ,OAAOlB,UA9B9B,CAAAD,IAAA,SAAAC,MAAA,WAmCQ,OACII,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAW,SAAUC,WAAY,SAAUC,QAAS,SAAUC,MAAO,CAACC,OAAO,SACxFzC,KAAKY,iBACNQ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACF,MA3ChB,CACHG,QAAQ,SA2CIvB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOS,GAAG,WAAWC,YAAY,OAAOC,UAAQ,EAAEC,aAAc,QAASlB,KAAK,OAAOmB,SAAUhD,KAAKU,oBAEvGU,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACF,MA9CjB,CACHG,QAAQ,SA8CIvB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOU,YAAY,WAAYhB,KAAK,cAExCT,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACF,MAjDhB,CACHG,QAAQ,SAiDIvB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQS,GAAG,cAAcK,QAAS,YAAaC,SAA0C,GAA9BlD,KAAKI,MAAMC,SAASc,OAAagC,QAASnD,KAAKO,eAA1G,eA7CpBb,EAAA,CAA2B0D,IAAMC,WENpBC,EAAb,SAAA3D,GACI,SAAA2D,EAAY1D,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACpBzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KACDW,cAAgBV,EAAKU,cAAcC,KAAnBV,OAAAW,EAAA,EAAAX,CAAAD,IACrBA,EAAKO,MAAQ,CAACC,SAAUR,EAAKD,MAAM+B,MAAM4B,WAAWlD,UAHhCR,EAD5B,OAAAC,OAAAe,EAAA,EAAAf,CAAAwD,EAAA3D,GAAAG,OAAAgB,EAAA,EAAAhB,CAAAwD,EAAA,EAAAvC,IAAA,gBAAAC,MAAA,SAOkBU,GACV1B,KAAKJ,MAAM+B,MAAMC,SDXf,CACNC,KAAM,SACNC,QAAS,CAAC0B,SAAU,MCUhBzB,SAASC,WATjB,CAAAjB,IAAA,SAAAC,MAAA,WAaQ,OACQI,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAY,SAAUE,MAAO,CAACiB,aAAa,SACvDrC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACF,MAAO,CAACkB,SAAS,IACxBtC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQwB,SAAU,SAAUnB,MAAO,CAACkB,SAAS,EAAGE,cAAc,QAC1DxC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAASK,MAAO,CAACkB,SAAS,EAAGE,cAAc,QACvCxC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACE,GAAG,cAAcJ,MAAO,CAACkB,SAAS,IAA7C,YAA4D1D,KAAKI,MAAMC,UACvEe,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,GAAE1C,KAAKJ,MAAMiE,UACvBzC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMK,MAAO,CAACsB,MAAM,QAASC,OAAO,UAAWpB,QAAQ,QAASQ,QAASnD,KAAKJ,MAAMoE,oBAAoB5C,EAAAC,EAAAC,cAAA,qCACxGF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,GAAEtB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQgB,QAASnD,KAAKO,cAAe0C,QAAS,aAA9C,mBArB5CK,EAAA,CAA4BF,IAAMC,WCJlC,SAASY,EAAiBC,GACtB,GAAGA,EACC,MAAO,CACHC,gBAAiB,QAItB,IAAMC,EAAb,SAAAzE,GACI,SAAAyE,EAAYxE,GAAY,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,GAAAtE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KACdJ,IAFd,OAAAE,OAAAe,EAAA,EAAAf,CAAAsE,EAAAzE,GAAAG,OAAAgB,EAAA,EAAAhB,CAAAsE,EAAA,EAAArD,IAAA,SAAAC,MAAA,WAKY,IACAqD,EADAxE,EAAAG,KAaJ,OAXAqE,EAAQrE,KAAKJ,MAAMyE,MAAMC,IAAI,SAACC,GACvB,OAAOnD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACPqC,QAAM,EACNC,UAAW,IACXzD,MAAOuD,EACPpB,QAAS,SAAAzB,GAAC,OAAI7B,EAAKD,MAAM8E,iBAAiBhD,EAAE6C,IAC5C/B,MAAOyB,EAAiBM,IAAS1E,EAAKD,MAAM+E,cAC3CJ,KAKJnD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACkC,GAAI,GACXxD,EAAAC,EAAAC,cAAA,MAAIkB,MAAO,CAACqC,YAAY,SAAxB,gBACAzD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMsC,UAAW,OACZJ,QAtBrBD,EAAA,CAAmChB,IAAMC,WCP5ByB,EAAb,SAAAnF,GACI,SAAAmF,EAAYlF,GAAY,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,GAAAhF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgF,GAAA3E,KAAAH,KACdJ,IAFd,OAAAE,OAAAe,EAAA,EAAAf,CAAAgF,EAAAnF,GAAAG,OAAAgB,EAAA,EAAAhB,CAAAgF,EAAA,EAAA/D,IAAA,SAAAC,MAAA,WAMQ,IAAI+D,EA6BJ,OA5BAA,EAAQ/E,KAAKJ,MAAMoF,gBAAgBV,IAAI,SAACW,GACpC,OACI7D,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACkC,GAAI,QACXxD,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACa,EAAA,EAAD,cACU8C,EAASC,OAAOC,MAAM,KAAK,IAErC/D,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYc,QAAQ,MACfgC,EAASG,QAAQ,GAAGC,aAEzBjE,EAAAC,EAAAC,cAACa,EAAA,EAAD,kBACe8C,EAASK,KAAKC,UAE7BnE,EAAAC,EAAAC,cAACa,EAAA,EAAD,kBACe8C,EAASK,KAAKE,UAE7BpE,EAAAC,EAAAC,cAACa,EAAA,EAAD,kBACe8C,EAASK,KAAKG,UAE7BrE,EAAAC,EAAAC,cAACa,EAAA,EAAD,kBACe8C,EAASK,KAAKI,eAQ7CtE,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMO,MAAI,EAACkC,GAAI,IACXxD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,WAAS,EAACuD,QAAS,GAAInD,MAAO,CAACkB,SAAS,IAC1CqB,QAtCpBD,EAAA,CAAkC1B,IAAMC,mBCM3BuC,EAAb,SAAAjG,GAEI,SAAAiG,EAAYhG,GAAW,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,IACnB/F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8F,GAAAzF,KAAAH,KAAMJ,KAFHiG,oBACgB,EAEnBhG,EAAKO,MAAQ,CAAC0F,UAAU,KAAKvB,KAAK,KAAKI,YAAY,MACnD9E,EAAKgG,eAAiB,GACtBhG,EAAK6E,iBAAmB7E,EAAK6E,iBAAiBlE,KAAtBV,OAAAW,EAAA,EAAAX,CAAAD,IACxBA,EAAKkG,YAAclG,EAAKkG,YAAYvF,KAAjBV,OAAAW,EAAA,EAAAX,CAAAD,IACnBA,EAAKmG,sBANcnG,EAF3B,OAAAC,OAAAe,EAAA,EAAAf,CAAA8F,EAAAjG,GAAAG,OAAAgB,EAAA,EAAAhB,CAAA8F,EAAA,EAAA7E,IAAA,sBAAAC,MAAA,WAWyB,IAAAiF,EAAAjG,KACjBA,KAAKJ,MAAMsG,YAAYC,KAAK7B,IAAI,SAAC8B,GAC7BA,EAAUA,EAAQlB,OAAOC,MAAM,KAAK,IACS,IAA1Cc,EAAKJ,eAAeQ,QAAQD,IAC3BH,EAAKJ,eAAeS,KAAKF,OAfzC,CAAArF,IAAA,qBAAAC,MAAA,WAoBQhB,KAAK+F,YAAY/F,KAAK6F,eAAe,GAAG7F,KAAKJ,MAAMsG,eApB3D,CAAAnF,IAAA,mBAAAC,MAAA,SAuBqBU,EAAMV,GACpBhB,KAAK+F,YAAY/E,EAAMhB,KAAKJ,MAAMsG,eAxBzC,CAAAnF,IAAA,cAAAC,MAAA,SA2BgBuD,EAAS2B,GACjB,IAAIK,EAAOC,SAASN,EAAYC,KAAK,SAACC,GACnC,OAAOA,EAAQlB,OAAOC,MAAM,KAAK,KAAOZ,IAE3CvE,KAAKiC,SAAS,CACV0C,YAAaJ,EACbuB,UAAUU,YAAYD,OAjClC,CAAAxF,IAAA,SAAAC,MAAA,WAsCQ,OACII,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,WAAS,EAACuD,QAAS,GACrBvE,EAAAC,EAAAC,cAACmF,EAAD,CAAepC,MAAOrE,KAAK6F,eAAgBnB,iBAAkB1E,KAAK0E,iBAAkBC,YAAa3E,KAAKI,MAAMuE,gBAC1G3E,KAAKI,MAAM0F,WAAa1E,EAAAC,EAAAC,cAACoF,EAAD,CAAc1B,gBAAiBhF,KAAKI,MAAM0F,iBAzCpFF,EAAA,CAAmCxC,IAAMC,WC8E1BsD,EA7Ef,SAAAhH,GAEI,SAAAgH,EAAY/G,GAAU,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IAClB9G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6G,GAAAxG,KAAAH,KAAMJ,KAFFiE,SAAkB,GAGtBhE,EAAKO,MAAQ,CAACwG,YAAY,UAAUC,YAAY,UAAUX,YAAY,KAAKY,QAAO,GAClFjH,EAAKmE,mBAAqBnE,EAAKmE,mBAAmBxD,KAAxBV,OAAAW,EAAA,EAAAX,CAAAD,IAC1BA,EAAKe,eAAiBf,EAAKe,eAAeJ,KAApBV,OAAAW,EAAA,EAAAX,CAAAD,IAJJA,EAF1B,OAAAC,OAAAe,EAAA,EAAAf,CAAA6G,EAAAhH,GAAAG,OAAAgB,EAAA,EAAAhB,CAAA6G,EAAA,EAAA5F,IAAA,qBAAAC,MAAA,WASwB,IAAAiF,EAAAjG,KAChB+G,UAAUC,YAAYC,mBAAmB,SAACtD,GACnCA,GACCsC,EAAKhE,SAAS,CACV2E,YAAYjD,EAASuD,OAAOC,SAC5BN,YAAYlD,EAASuD,OAAOE,YAGpCnB,EAAKoB,cAjBjB,CAAAtG,IAAA,wBAAAC,MAAA,SAqB0BsG,EAAcC,GAChC,QAAIvH,KAAKI,MAAM8F,eAAkBlG,KAAKI,MAAM8F,aAAelG,KAAKI,MAAM8F,YAAYsB,KAAKC,OAASF,EAAUrB,YAAYsB,KAAKC,QAGxHzH,KAAKI,MAAM0G,SAAWS,EAAUT,SAzB3C,CAAA/F,IAAA,oBAAAC,MAAA,WAgCQhB,KAAKqH,YAhCb,CAAAtG,IAAA,UAAAC,MAAA,WAmCa,IAAA0G,EAAA1H,KACLA,KAAKiC,SAAS,CACT6E,QAAO,IAEZa,MAAM,oFAAqF3H,KAAKI,MAAMwG,YAAa,QAAS5G,KAAKI,MAAMyG,YAAa,0CACpJ,CACIe,QAAQ,CAACC,eAAgB,aAAaC,cAAc,sBAEvDC,KAAK,SAACxB,GACJ,OAAOA,EAAKyB,SAEdD,KAAK,SAACxB,GACHmB,EAAK7D,SAAW0C,EAAKiB,KAAKC,KAC1BC,EAAKzF,SAAS,CACV6E,QAAO,EACPZ,YAAYM,YAAYD,SAlDxC,CAAAxF,IAAA,iBAAAC,MAAA,WAuDQ,IAAKC,aAAaC,QAAQ,aAA2D,GAA5CD,aAAaC,QAAQ,YAAaC,OACzE,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAIC,yBAxD/B,CAAAV,IAAA,SAAAC,MAAA,WA6DQ,IAAIiH,EACAC,EAMJ,OALAD,EAAgB7G,EAAAC,EAAAC,cAAA,OAAKsB,GAAG,iBACpBxB,EAAAC,EAAAC,cAAC6G,EAAD,CAAQxG,MAAO3B,KAAKJ,MAAM+B,MAAOkC,SAAU7D,KAAK6D,SAAUG,mBAAoBhE,KAAKgE,uBAChFhE,KAAKI,MAAM8F,aAAe9E,EAAAC,EAAAC,cAAC8G,EAAD,CAAelC,YAAalG,KAAKI,MAAM8F,eAExEgC,EAAU9G,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAkBK,MAAO,CAACmB,SAAS,QAAQ0E,IAAI,MAAMC,MAAM,MAAMC,KAAK,MAAMC,OAAO,OAAQC,KAAM,MAEvGrH,EAAAC,EAAAC,cAACF,EAAAC,EAAMqH,SAAP,KACK1I,KAAKY,iBACLZ,KAAKI,MAAM0G,OAAQoB,EAASD,OAvE7CtB,EAAA,CAA4BvD,IAAMC,mBCjB5BsF,EAAe,CACjBtI,SAAS,GACTC,SAAS,+BCMTqB,EAAQiH,YDJG,WAAsC,IAArCxI,EAAqCyI,UAAA1H,OAAA,QAAA2H,IAAAD,UAAA,GAAAA,UAAA,GAA7BF,EAAcI,EAAeF,UAAA1H,OAAA,EAAA0H,UAAA,QAAAC,EACjD,OAAQC,EAAOlH,MACb,IAAK,QAGC,OAFAZ,aAAa+H,QAAQ,WAAWD,EAAOjH,QAAQzB,UAC/C4I,QAAQC,IAAI,UAAWH,EAAO1I,UACvBP,OAAOqJ,OAAO,GAAI/I,EAAO,CAC5BC,SAAU0I,EAAOjH,QAAQzB,WAInC,IAAK,SAGC,OAFAY,aAAa+H,QAAQ,WAAW,IAChCC,QAAQC,IAAI,WACLpJ,OAAOqJ,OAAO,GAAI/I,EAAO,CAC5BC,SAAU0I,EAAOjH,QAAQ0B,WAInC,QACE,OAAO1D,OAAOqJ,OAAO,GAAI/I,EAAO,CAC5BC,SAAUY,aAAaC,QAAQ,iBCdrCkI,EACFhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACIjI,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACC,OAAO,SAChBrB,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAUC,OAAK,EAACC,KAAM/H,gBAA8BD,GAAI,WACxDJ,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAQC,KAAM,SAAUC,OAAQ,SAAC/J,GAAD,OAAWwB,EAAAC,EAAAC,cAACsI,EAAD,CAAOjI,MAAOA,OACzDP,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAQC,KAAM,UAAUC,OAAQ,SAAC/J,GAAD,OAAWwB,EAAAC,EAAAC,cAACuI,EAAD,CAAQlI,MAAOA,SAItE,SAASgI,IACLG,IAASH,OAAOP,EAASW,SAASC,eAAe,SAGrDrI,EAAMsI,UAAUN,GAEhBA","file":"static/js/main.4988c797.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {loginData,logoutData} from '../service/Action'\r\nimport { Grid, Input, Button } from '@material-ui/core';\r\n\r\ninterface ILoginProps {\r\n    store:any,\r\n}\r\n\r\ninterface ILoginStates {\r\n    userName:string,\r\n    password:string\r\n}\r\n\r\nfunction getHomeStyle() {\r\n    return {\r\n        padding:\"1rem\",\r\n    }\r\n}\r\n\r\nexport class Login extends React.Component<ILoginProps, ILoginStates> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {userName:'',password:''};\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n    }\r\n\r\n    renderRedirect(){\r\n        if (!!localStorage.getItem('userName') && localStorage.getItem('userName')!.length > 0) {\r\n          return <Redirect to={process.env.PUBLIC_URL +'/webApp'} />\r\n        }\r\n    }\r\n\r\n    onSubmitClick(e:any){\r\n        this.props.store.dispatch(loginData(this.state.userName));\r\n        this.renderRedirect();\r\n        location.reload();\r\n    }\r\n\r\n    handleNameChange(e:any){\r\n        this.setState({\r\n            userName: e.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange(e:any){\r\n        this.setState({\r\n            password:e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container direction={\"column\"} alignItems={\"center\"} justify={\"center\"} style={{height:\"100%\"}}>\r\n                {this.renderRedirect()}\r\n                <Grid item style={getHomeStyle()} >\r\n                    <Input id=\"userName\" placeholder=\"name\" required  autoComplete={'false'} type=\"name\" onChange={this.handleNameChange}/>\r\n                </Grid> \r\n                 <Grid item style={getHomeStyle()}>  \r\n                    <Input placeholder=\"password\"  type=\"password\" />\r\n                </Grid>\r\n                <Grid item style={getHomeStyle()}>  \r\n                    <Button id=\"loginButton\" variant={\"contained\"} disabled = {this.state.userName.length == 0} onClick={this.onSubmitClick}>LogIn</Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","\r\nexport const loginData = (userName:string) =>\r\n{\r\n    return{\r\n    type: 'LOGIN',\r\n    payload: {userName: userName}\r\n    }\r\n}\r\n\r\nexport const logoutData = () =>\r\n{\r\n    return{\r\n    type: 'LOGOUT',\r\n    payload: {username: ''}\r\n    }\r\n}","import React from 'react';\r\nimport {logoutData} from '../service/Action'\r\nimport { Grid, Button, AppBar, Toolbar, Link } from '@material-ui/core';\r\n\r\ninterface IHeaderProps {\r\n    store:any,\r\n    cityName:string,\r\n    setCurrentLocation:(e:any) => void\r\n}\r\n\r\ninterface IHeaderStates {\r\n    userName:string\r\n}\r\n\r\nexport class Header extends React.Component<IHeaderProps, IHeaderStates> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.state = {userName: this.props.store.getState().userName}\r\n    }\r\n\r\n    onSubmitClick(e:any){\r\n        this.props.store.dispatch(logoutData());\r\n        location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Grid container alignItems={\"center\"} style={{marginBottom:'1rem'}}>\r\n                    <Grid item style={{flexGrow:1}}>\r\n                        <AppBar position={\"static\"} style={{flexGrow:1, flexDirection:'row'}}>\r\n                            <Toolbar style={{flexGrow:1, flexDirection:'row'}}>\r\n                                <Grid item id=\"welcomeUser\" style={{flexGrow:1}} > Welcome {this.state.userName}</Grid>\r\n                                <Grid item>{this.props.cityName}</Grid>\r\n                                <Link style={{color:\"white\", cursor:\"pointer\", padding:'1rem'}} onClick={this.props.setCurrentLocation}><i>choose current location</i></Link>\r\n                                <Grid item ><Button onClick={this.onSubmitClick} variant={\"contained\"} >Logout</Button></Grid>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </Grid>\r\n                </Grid> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;;","import React from 'react';\r\nimport {List,ListItem, Grid} from '@material-ui/core'\r\ninterface IDateNavigatorProps{\r\n    dates:any,\r\n    currentDate:any,\r\n    handleDateChange:(e:any,value:any)=>void\r\n}\r\ninterface IDateNavigatorStates{\r\n\r\n}\r\nfunction getListItemStyle(match:boolean) {\r\n    if(match){\r\n        return {\r\n            backgroundColor: 'grey',\r\n        };\r\n    }\r\n}\r\nexport class DateNavigator extends React.Component<IDateNavigatorProps,IDateNavigatorStates>{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let dates;\r\n        dates = this.props.dates.map((date:any) => {\r\n               return <ListItem \r\n               button \r\n               component={\"a\"} \r\n               value={date} \r\n               onClick={e => this.props.handleDateChange(e,date)}\r\n               style={getListItemStyle(date === this.props.currentDate)}>\r\n               {date}\r\n               </ListItem>\r\n           })\r\n        \r\n        return(\r\n            <Grid item xs={2}>\r\n                <h4 style={{paddingLeft:'1rem'}}>Choose Date:</h4>\r\n                <List component={\"nav\"}>\r\n                    {dates}\r\n                </List>\r\n            </Grid>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default DateNavigator;","import React from 'react';\r\nimport {Card, CardHeader, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\ninterface IWeatherCardsProps{\r\n    WeatherCardData:[]\r\n}\r\ninterface IWeatherCardsStates{\r\n\r\n}\r\n\r\nexport class WeatherCards extends React.Component<IWeatherCardsProps,IWeatherCardsStates>{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let cards;\r\n        cards = this.props.WeatherCardData.map((cardData:any)=>{\r\n            return (\r\n                <Grid item xs={\"auto\"}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography>\r\n                               Time: {cardData.dt_txt.split(' ')[1]}\r\n                            </Typography>\r\n                            <Typography variant=\"h3\">\r\n                                {cardData.weather[0].description}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Max Temp: {cardData.main.temp_max}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Min Temp: {cardData.main.temp_min}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Pressure: {cardData.main.pressure}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Humidity: {cardData.main.humidity}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            )\r\n        })\r\n        return(\r\n            <Grid item xs={10}>\r\n                <Grid container spacing={24} style={{flexGrow:1}}>\r\n                   {cards}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default WeatherCards;","import React from 'react';\r\nimport {DateNavigator} from '../component/DateNavigator';\r\nimport {WeatherCards} from '../component/WeatherCards';\r\nimport * as _ from 'lodash';\r\nimport { Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface IWeatherReportProps{\r\n    weatherData:any\r\n}\r\ninterface IWeatherReportStates{\r\n    date:any,\r\n    cardsData:any,\r\n    currentDate:any\r\n}\r\n\r\nexport class WeatherReport extends React.Component<IWeatherReportProps,IWeatherReportStates>{\r\n    public availableDates:Array<string>;\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {cardsData:null,date:null,currentDate:null};\r\n        this.availableDates = [];\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.setCardData = this.setCardData.bind(this);\r\n        this.fetchAvailableDates();\r\n    }\r\n\r\n    fetchAvailableDates(){\r\n        this.props.weatherData.list.map((element:any) => {\r\n            element = element.dt_txt.split(' ')[0];\r\n            if(this.availableDates.indexOf(element) === -1){\r\n                this.availableDates.push(element);\r\n            }\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        this.setCardData(this.availableDates[0],this.props.weatherData);\r\n    }\r\n\r\n    handleDateChange(e:any,value:any){\r\n       this.setCardData(value,this.props.weatherData);\r\n    }\r\n\r\n    setCardData(date:any,weatherData:any){\r\n        let data = _.filter(weatherData.list,(element:any) =>{\r\n           return element.dt_txt.split(' ')[0] === date;\r\n        })\r\n        this.setState({\r\n            currentDate: date,\r\n            cardsData:_.cloneDeep(data)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Grid container spacing={8}>\r\n                <DateNavigator dates={this.availableDates} handleDateChange={this.handleDateChange} currentDate={this.state.currentDate}/>\r\n               {!!this.state.cardsData && <WeatherCards WeatherCardData={this.state.cardsData}/>}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherReport;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {Header} from '../component/Header';\r\nimport {WeatherReport} from '../component/WeatherReport';\r\nimport * as _ from 'lodash';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ninterface IWebAppStates{\r\n    xCoordinate: Number,\r\n    yCoordinate:Number,\r\n    weatherData:any,\r\n    isBusy:boolean\r\n}\r\ninterface IWebAppProps{\r\n    store:any\r\n}\r\n\r\nexport class WebApp extends React.Component<IWebAppProps, IWebAppStates>{\r\n    private cityName:string = '';\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {xCoordinate:30.734301,yCoordinate:76.793297,weatherData:null,isBusy:false};\r\n        this.setCurrentLocation = this.setCurrentLocation.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n    }\r\n\r\n    setCurrentLocation(){\r\n        navigator.geolocation.getCurrentPosition((position)=>{\r\n            if(position){\r\n                this.setState({\r\n                    xCoordinate:position.coords.latitude,\r\n                    yCoordinate:position.coords.longitude\r\n                })\r\n            }\r\n            this.getData();\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps:any,nextState:any){\r\n        if(!this.state.weatherData || (!!this.state.weatherData && this.state.weatherData.city.name !== nextState.weatherData.city.name)){\r\n            return true;\r\n        }\r\n        if(this.state.isBusy !== nextState.isBusy){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        this.setState({\r\n             isBusy:true\r\n        })\r\n        fetch('https://cors-anywhere.herokuapp.com/api.openweathermap.org/data/2.5/forecast?lat='+ this.state.xCoordinate +'&lon='+ this.state.yCoordinate +'&appid=0cefc283fa0c3ad68584e2c30b643c94',\r\n        {\r\n            headers:{'Content-Type': 'text/plain','Access-Type':'application/json'},\r\n        })\r\n        .then((data:any)=>{\r\n           return data.json();\r\n        })\r\n        .then((data)=>{\r\n            this.cityName = data.city.name;\r\n            this.setState({\r\n                isBusy:false,\r\n                weatherData:_.cloneDeep(data) \r\n            })\r\n        })\r\n    }\r\n    renderRedirect(){\r\n        if (!localStorage.getItem('userName') || localStorage.getItem('userName')!.length == 0) {\r\n          return <Redirect to={process.env.PUBLIC_URL +'/login'} />\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let weatherReport;\r\n        let spinner;\r\n        weatherReport = <div id=\"weatherReport\">\r\n            <Header store={this.props.store} cityName={this.cityName} setCurrentLocation={this.setCurrentLocation}/>\r\n            {!!this.state.weatherData && <WeatherReport weatherData={this.state.weatherData}/>}\r\n        </div>\r\n        spinner = <CircularProgress style={{position:'fixed',top:'50%',right:'50%',left:'50%',bottom:'50%'}} size={100}></CircularProgress>\r\n        return(\r\n            <React.Fragment>\r\n                {this.renderRedirect()}\r\n                {this.state.isBusy? spinner: weatherReport}\r\n            </React.Fragment> \r\n        )\r\n    }\r\n}\r\n\r\nexport default WebApp;\r\n","const initialState = {\r\n    userName:'',\r\n    password:''\r\n  }\r\nexport default (state = initialState, action:any) => {\r\n    switch (action.type) {\r\n      case 'LOGIN':{\r\n            localStorage.setItem('userName',action.payload.userName);\r\n            console.log(\"welcome\"+ action.userName);\r\n            return Object.assign({}, state, {\r\n                userName: action.payload.userName\r\n            });\r\n            break;\r\n        }\r\n      case 'LOGOUT':{\r\n            localStorage.setItem('userName','');\r\n            console.log(\"Bye Bye\");\r\n            return Object.assign({}, state, {\r\n                userName: action.payload.username\r\n            });\r\n            break;\r\n        }\r\n      default:\r\n        return Object.assign({}, state, {\r\n            userName: localStorage.getItem('userName'),\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Login from './component/Login';\nimport WebApp from './component/WebApp'\nimport {createStore} from 'redux';\nimport myApp from './service/Reducer';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\n\nlet store = createStore(myApp);\n\nconst routing = (\n    <Router>\n        <div style={{height:\"100%\"}} >\n            <Redirect exact from={process.env.PUBLIC_URL + '/'} to={'/login'}></Redirect>\n            <Route  path={'/login'} render={(props) => <Login store={store}/>} />\n            <Route  path={'/webApp'}render={(props) => <WebApp store={store}/>}  /> \n        </div>\n    </Router>\n)\nfunction render(){\n    ReactDOM.render(routing, document.getElementById('root'));\n}\n\nstore.subscribe(render);\n\nrender();"],"sourceRoot":""}