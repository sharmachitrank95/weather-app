{"version":3,"sources":["component/Login.tsx","service/Action.tsx","component/Header.tsx","component/DateNavigator.tsx","component/WeatherCards.tsx","component/WeatherReport.tsx","component/WebApp.tsx","service/Reducer.tsx","index.tsx"],"names":["Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userName","password","onSubmitClick","bind","assertThisInitialized","handleNameChange","handlePasswordChange","renderRedirect","inherits","createClass","key","value","localStorage","getItem","length","react_default","a","createElement","Redirect","exact","to","process","e","store","dispatch","type","payload","location","reload","setState","target","index_es","container","direction","alignItems","justify","style","height","item","padding","id","placeholder","required","autoComplete","onChange","variant","disabled","onClick","React","Component","Header","getState","username","marginBottom","flexGrow","position","flexDirection","cityName","color","cursor","setCurrentLocation","getListItemStyle","match","backgroundColor","DateNavigator","dates","map","date","button","component","handleDateChange","currentDate","xs","paddingLeft","WeatherCards","cards","WeatherCardData","cardData","dt_txt","split","weather","description","main","temp_max","temp_min","pressure","humidity","spacing","WeatherReport","availableDates","cardsData","setCardData","fetchAvailableDates","_this2","weatherData","list","element","indexOf","push","data","_","DateNavigator_DateNavigator","WeatherCards_WeatherCards","WebApp","xCoordinate","yCoordinate","isBusy","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getData","nextProps","nextState","city","name","_this3","fetch","headers","Content-Type","Access-Type","then","json","weatherReport","spinner","Header_Header","WeatherReport_WeatherReport","top","right","left","bottom","size","Fragment","initialState","createStore","arguments","undefined","action","setItem","console","log","assign","routing","BrowserRouter","es_Redirect","from","Route","path","render","component_Login","component_WebApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.2cc00586.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {loginData,logoutData} from '../service/Action'\r\nimport { Grid, Input, Button } from '@material-ui/core';\r\n\r\ninterface ILoginProps {\r\n    store:any,\r\n}\r\n\r\ninterface ILoginStates {\r\n    userName:string,\r\n    password:string\r\n}\r\n\r\nfunction getHomeStyle() {\r\n    return {\r\n        padding:\"1rem\",\r\n    }\r\n}\r\n\r\nexport class Login extends React.Component<ILoginProps, ILoginStates> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {userName:'',password:''};\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n    }\r\n\r\n    renderRedirect(){\r\n        if (!!localStorage.getItem('userName') && localStorage.getItem('userName')!.length > 0) {\r\n          return <Redirect exact to={process.env.PUBLIC_URL + '/webApp'} />\r\n        }\r\n    }\r\n\r\n    onSubmitClick(e:any){\r\n        this.props.store.dispatch(loginData(this.state.userName));\r\n        this.renderRedirect();\r\n        location.reload();\r\n    }\r\n\r\n    handleNameChange(e:any){\r\n        this.setState({\r\n            userName: e.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange(e:any){\r\n        this.setState({\r\n            password:e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container direction={\"column\"} alignItems={\"center\"} justify={\"center\"} style={{height:\"100%\"}}>\r\n                {this.renderRedirect()}\r\n                <Grid item style={getHomeStyle()} >\r\n                    <Input id=\"userName\" placeholder=\"name\" required  autoComplete={'false'} type=\"name\" onChange={this.handleNameChange}/>\r\n                </Grid> \r\n                 <Grid item style={getHomeStyle()}>  \r\n                    <Input placeholder=\"password\"  type=\"password\" />\r\n                </Grid>\r\n                <Grid item style={getHomeStyle()}>  \r\n                    <Button id=\"loginButton\" variant={\"contained\"} disabled = {this.state.userName.length == 0} onClick={this.onSubmitClick}>LogIn</Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","\r\nexport const loginData = (userName:string) =>\r\n{\r\n    return{\r\n    type: 'LOGIN',\r\n    payload: {userName: userName}\r\n    }\r\n}\r\n\r\nexport const logoutData = () =>\r\n{\r\n    return{\r\n    type: 'LOGOUT',\r\n    payload: {username: ''}\r\n    }\r\n}","import React from 'react';\r\nimport {logoutData} from '../service/Action'\r\nimport { Grid, Button, AppBar, Toolbar, Link } from '@material-ui/core';\r\n\r\ninterface IHeaderProps {\r\n    store:any,\r\n    cityName:string,\r\n    setCurrentLocation:(e:any) => void\r\n}\r\n\r\ninterface IHeaderStates {\r\n    userName:string\r\n}\r\n\r\nexport class Header extends React.Component<IHeaderProps, IHeaderStates> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.state = {userName: this.props.store.getState().userName}\r\n    }\r\n\r\n    onSubmitClick(e:any){\r\n        this.props.store.dispatch(logoutData());\r\n        location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Grid container alignItems={\"center\"} style={{marginBottom:'1rem'}}>\r\n                    <Grid item style={{flexGrow:1}}>\r\n                        <AppBar position={\"static\"} style={{flexGrow:1, flexDirection:'row'}}>\r\n                            <Toolbar style={{flexGrow:1, flexDirection:'row'}}>\r\n                                <Grid item id=\"welcomeUser\" style={{flexGrow:1}} > Welcome {this.state.userName}</Grid>\r\n                                <Grid item>{this.props.cityName}</Grid>\r\n                                <Link style={{color:\"white\", cursor:\"pointer\", padding:'1rem'}} onClick={this.props.setCurrentLocation}><i>choose current location</i></Link>\r\n                                <Grid item ><Button onClick={this.onSubmitClick} variant={\"contained\"} >Logout</Button></Grid>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </Grid>\r\n                </Grid> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;;","import React from 'react';\r\nimport {List,ListItem, Grid} from '@material-ui/core'\r\ninterface IDateNavigatorProps{\r\n    dates:any,\r\n    currentDate:any,\r\n    handleDateChange:(e:any,value:any)=>void\r\n}\r\ninterface IDateNavigatorStates{\r\n\r\n}\r\nfunction getListItemStyle(match:boolean) {\r\n    if(match){\r\n        return {\r\n            backgroundColor: 'grey',\r\n        };\r\n    }\r\n}\r\nexport class DateNavigator extends React.Component<IDateNavigatorProps,IDateNavigatorStates>{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let dates;\r\n        dates = this.props.dates.map((date:any) => {\r\n               return <ListItem \r\n               button \r\n               component={\"a\"} \r\n               value={date} \r\n               onClick={e => this.props.handleDateChange(e,date)}\r\n               style={getListItemStyle(date === this.props.currentDate)}>\r\n               {date}\r\n               </ListItem>\r\n           })\r\n        \r\n        return(\r\n            <Grid item xs={2}>\r\n                <h4 style={{paddingLeft:'1rem'}}>Choose Date:</h4>\r\n                <List component={\"nav\"}>\r\n                    {dates}\r\n                </List>\r\n            </Grid>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default DateNavigator;","import React from 'react';\r\nimport {Card, CardHeader, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\ninterface IWeatherCardsProps{\r\n    WeatherCardData:[]\r\n}\r\ninterface IWeatherCardsStates{\r\n\r\n}\r\n\r\nexport class WeatherCards extends React.Component<IWeatherCardsProps,IWeatherCardsStates>{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        let cards;\r\n        cards = this.props.WeatherCardData.map((cardData:any)=>{\r\n            return (\r\n                <Grid item xs={\"auto\"}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography>\r\n                               Time: {cardData.dt_txt.split(' ')[1]}\r\n                            </Typography>\r\n                            <Typography variant=\"h3\">\r\n                                {cardData.weather[0].description}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Max Temp: {cardData.main.temp_max}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Min Temp: {cardData.main.temp_min}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Pressure: {cardData.main.pressure}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Humidity: {cardData.main.humidity}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            )\r\n        })\r\n        return(\r\n            <Grid item xs={10}>\r\n                <Grid container spacing={24} style={{flexGrow:1}}>\r\n                   {cards}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default WeatherCards;","import React from 'react';\r\nimport {DateNavigator} from '../component/DateNavigator';\r\nimport {WeatherCards} from '../component/WeatherCards';\r\nimport * as _ from 'lodash';\r\nimport { Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface IWeatherReportProps{\r\n    weatherData:any\r\n}\r\ninterface IWeatherReportStates{\r\n    date:any,\r\n    cardsData:any,\r\n    currentDate:any\r\n}\r\n\r\nexport class WeatherReport extends React.Component<IWeatherReportProps,IWeatherReportStates>{\r\n    public availableDates:Array<string>;\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {cardsData:null,date:null,currentDate:null};\r\n        this.availableDates = [];\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.setCardData = this.setCardData.bind(this);\r\n        this.fetchAvailableDates();\r\n    }\r\n\r\n    fetchAvailableDates(){\r\n        this.props.weatherData.list.map((element:any) => {\r\n            element = element.dt_txt.split(' ')[0];\r\n            if(this.availableDates.indexOf(element) === -1){\r\n                this.availableDates.push(element);\r\n            }\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        this.setCardData(this.availableDates[0],this.props.weatherData);\r\n    }\r\n\r\n    handleDateChange(e:any,value:any){\r\n       this.setCardData(value,this.props.weatherData);\r\n    }\r\n\r\n    setCardData(date:any,weatherData:any){\r\n        let data = _.filter(weatherData.list,(element:any) =>{\r\n           return element.dt_txt.split(' ')[0] === date;\r\n        })\r\n        this.setState({\r\n            currentDate: date,\r\n            cardsData:_.cloneDeep(data)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Grid container spacing={8}>\r\n                <DateNavigator dates={this.availableDates} handleDateChange={this.handleDateChange} currentDate={this.state.currentDate}/>\r\n               {!!this.state.cardsData && <WeatherCards WeatherCardData={this.state.cardsData}/>}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherReport;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {Header} from '../component/Header';\r\nimport {WeatherReport} from '../component/WeatherReport';\r\nimport * as _ from 'lodash';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ninterface IWebAppStates{\r\n    xCoordinate: Number,\r\n    yCoordinate:Number,\r\n    weatherData:any,\r\n    isBusy:boolean\r\n}\r\ninterface IWebAppProps{\r\n    store:any\r\n}\r\n\r\nexport class WebApp extends React.Component<IWebAppProps, IWebAppStates>{\r\n    private cityName:string = '';\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {xCoordinate:30.734301,yCoordinate:76.793297,weatherData:null,isBusy:false};\r\n        this.setCurrentLocation = this.setCurrentLocation.bind(this);\r\n        this.renderRedirect = this.renderRedirect.bind(this);\r\n    }\r\n\r\n    setCurrentLocation(){\r\n        navigator.geolocation.getCurrentPosition((position)=>{\r\n            if(position){\r\n                this.setState({\r\n                    xCoordinate:position.coords.latitude,\r\n                    yCoordinate:position.coords.longitude\r\n                })\r\n            }\r\n            this.getData();\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps:any,nextState:any){\r\n        if(!this.state.weatherData || (!!this.state.weatherData && this.state.weatherData.city.name !== nextState.weatherData.city.name)){\r\n            return true;\r\n        }\r\n        if(this.state.isBusy !== nextState.isBusy){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        this.setState({\r\n             isBusy:true\r\n        })\r\n        fetch('https://cors-anywhere.herokuapp.com/api.openweathermap.org/data/2.5/forecast?lat='+ this.state.xCoordinate +'&lon='+ this.state.yCoordinate +'&appid=0cefc283fa0c3ad68584e2c30b643c94',\r\n        {\r\n            headers:{'Content-Type': 'text/plain','Access-Type':'application/json'},\r\n        })\r\n        .then((data:any)=>{\r\n           return data.json();\r\n        })\r\n        .then((data)=>{\r\n            this.cityName = data.city.name;\r\n            this.setState({\r\n                isBusy:false,\r\n                weatherData:_.cloneDeep(data) \r\n            })\r\n        })\r\n    }\r\n    renderRedirect(){\r\n        if (!localStorage.getItem('userName') || localStorage.getItem('userName')!.length == 0) {\r\n          return <Redirect to={process.env.PUBLIC_URL + '/login'} />\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let weatherReport;\r\n        let spinner;\r\n        weatherReport = <div id=\"weatherReport\">\r\n            <Header store={this.props.store} cityName={this.cityName} setCurrentLocation={this.setCurrentLocation}/>\r\n            {!!this.state.weatherData && <WeatherReport weatherData={this.state.weatherData}/>}\r\n        </div>\r\n        spinner = <CircularProgress style={{position:'fixed',top:'50%',right:'50%',left:'50%',bottom:'50%'}} size={100}></CircularProgress>\r\n        return(\r\n            <React.Fragment>\r\n                {this.renderRedirect()}\r\n                {this.state.isBusy? spinner: weatherReport}\r\n            </React.Fragment> \r\n        )\r\n    }\r\n}\r\n\r\nexport default WebApp;\r\n","const initialState = {\r\n    userName:'',\r\n    password:''\r\n  }\r\nexport default (state = initialState, action:any) => {\r\n    switch (action.type) {\r\n      case 'LOGIN':{\r\n            localStorage.setItem('userName',action.payload.userName);\r\n            console.log(\"welcome\"+ action.userName);\r\n            return Object.assign({}, state, {\r\n                userName: action.payload.userName\r\n            });\r\n            break;\r\n        }\r\n      case 'LOGOUT':{\r\n            localStorage.setItem('userName','');\r\n            console.log(\"Bye Bye\");\r\n            return Object.assign({}, state, {\r\n                userName: action.payload.username\r\n            });\r\n            break;\r\n        }\r\n      default:\r\n        return Object.assign({}, state, {\r\n            userName: localStorage.getItem('userName'),\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Login from './component/Login';\nimport WebApp from './component/WebApp'\nimport {createStore} from 'redux';\nimport myApp from './service/Reducer';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\n\nlet store = createStore(myApp);\n\nconst routing = (\n    <Router>\n        <div style={{height:\"100%\"}} >\n            <Redirect exact from={process.env.PUBLIC_URL + '/'} to={process.env.PUBLIC_URL + '/login'}></Redirect>\n            <Route exact path={process.env.PUBLIC_URL + '/login'} render={(props) => <Login store={store}/>} />\n            <Route exact path={process.env.PUBLIC_URL + '/webApp'} render={(props) => <WebApp store={store}/>}  /> \n        </div>\n    </Router>\n)\nfunction render(){\n    ReactDOM.render(routing, document.getElementById('root'));\n}\n\nstore.subscribe(render);\n\nrender();"],"sourceRoot":""}