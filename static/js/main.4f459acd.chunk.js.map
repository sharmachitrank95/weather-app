{"version":3,"sources":["component/Login.tsx","service/Action.tsx","component/Header.tsx","component/DateNavigator.tsx","component/WeatherCards.tsx","component/WeatherReport.tsx","component/WebApp.tsx","service/Reducer.tsx","index.tsx"],"names":["Login","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userName","onSubmitClick","bind","assertThisInitialized","handleNameChange","inherits","createClass","key","value","localStorage","getItem","length","react_default","a","createElement","Redirect","to","e","store","dispatch","type","payload","renderRedirect","location","reload","setState","target","index_es","container","direction","alignItems","justify","style","height","item","padding","id","placeholder","required","autoComplete","onChange","variant","disabled","onClick","React","Component","Header","_React$PureComponent","getState","username","marginBottom","flexGrow","position","flexDirection","cityName","color","cursor","setCurrentLocation","PureComponent","getListItemStyle","match","backgroundColor","DateNavigator","dates","map","date","button","component","handleDateChange","currentDate","xs","paddingLeft","WeatherCards","cards","WeatherCardData","cardData","dt_txt","split","weather","description","main","temp_max","temp_min","pressure","humidity","spacing","WeatherReport","availableDates","cardsData","setCardData","fetchAvailableDates","_this2","weatherData","list","element","indexOf","push","data","_","DateNavigator_DateNavigator","WeatherCards_WeatherCards","WebApp","xCoordinate","yCoordinate","isBusy","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","getData","nextProps","nextState","city","name","_this3","fetch","headers","Content-Type","Access-Type","then","json","weatherReport","spinner","Header_Header","WeatherReport_WeatherReport","top","right","left","bottom","size","Fragment","initialState","password","createStore","arguments","undefined","action","setItem","console","log","assign","routing","HashRouter","es_Redirect","exact","from","Route","path","render","component_Login","component_WebApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.4f459acd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {loginData,logoutData} from '../service/Action'\r\nimport { Grid, Input, Button } from '@material-ui/core';\r\n\r\ninterface ILoginProps {\r\n    store:any,\r\n}\r\n\r\ninterface ILoginStates {\r\n    userName:string,\r\n}\r\n\r\nfunction getHomeStyle() {\r\n    return {\r\n        padding:\"1rem\",\r\n    }\r\n}\r\n\r\nexport class Login extends React.Component<ILoginProps, ILoginStates> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {userName:''}\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    renderRedirect(){\r\n        if (!!localStorage.getItem('userName') && localStorage.getItem('userName')!.length > 0) {\r\n          return <Redirect to='/webApp' />\r\n        }\r\n    }\r\n\r\n    onSubmitClick(e:any){\r\n        this.props.store.dispatch(loginData(this.state.userName));\r\n        this.renderRedirect();\r\n        location.reload();\r\n    }\r\n\r\n    handleNameChange(e:any){\r\n        this.setState({\r\n            userName: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container direction={\"column\"} alignItems={\"center\"} justify={\"center\"} style={{height:\"100%\"}}>\r\n                {this.renderRedirect()}\r\n                <Grid item style={getHomeStyle()} >\r\n                    <Input id=\"userName\" placeholder=\"name\" required  autoComplete={'false'} type=\"name\" onChange={this.handleNameChange}/>\r\n                </Grid> \r\n                 <Grid item style={getHomeStyle()}>  \r\n                    <Input placeholder=\"password\"  type=\"password\" />\r\n                </Grid>\r\n                <Grid item style={getHomeStyle()}>  \r\n                    <Button id=\"loginButton\" variant={\"contained\"} disabled = {this.state.userName.length == 0} onClick={this.onSubmitClick}>LogIn</Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","\r\nexport const loginData = (userName:string) =>\r\n{\r\n    return{\r\n    type: 'LOGIN',\r\n    payload: {userName: userName}\r\n    }\r\n}\r\n\r\nexport const logoutData = () =>\r\n{\r\n    return{\r\n    type: 'LOGOUT',\r\n    payload: {username: ''}\r\n    }\r\n}","import React from 'react';\r\nimport {logoutData} from '../service/Action'\r\nimport { Grid, Button, AppBar, Toolbar, Link } from '@material-ui/core';\r\n\r\ninterface IHeaderProps {\r\n    store:any,\r\n    cityName:string,\r\n    setCurrentLocation:(e:any) => void\r\n}\r\n\r\nexport class Header extends React.PureComponent<IHeaderProps>{\r\n    private userName:string='';\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.onSubmitClick = this.onSubmitClick.bind(this);\r\n        this.userName = this.props.store.getState().userName;\r\n    }\r\n\r\n    onSubmitClick(e:any){\r\n        this.props.store.dispatch(logoutData());\r\n        location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Grid container alignItems={\"center\"} style={{marginBottom:'1rem'}}>\r\n                    <Grid item style={{flexGrow:1}}>\r\n                        <AppBar position={\"static\"} style={{flexGrow:1, flexDirection:'row'}}>\r\n                            <Toolbar style={{flexGrow:1, flexDirection:'row'}}>\r\n                                <Grid item id=\"welcomeUser\" style={{flexGrow:1}} > Welcome {this.userName}</Grid>\r\n                                <Grid item>{this.props.cityName}</Grid>\r\n                                <Link style={{color:\"white\", cursor:\"pointer\", padding:'1rem'}} onClick={this.props.setCurrentLocation}><i>choose current location</i></Link>\r\n                                <Grid item ><Button onClick={this.onSubmitClick} variant={\"contained\"} >Logout</Button></Grid>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                    </Grid>\r\n                </Grid> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;;","import React from 'react';\r\nimport {List,ListItem, Grid} from '@material-ui/core'\r\ninterface IDateNavigatorProps{\r\n    dates:any,\r\n    currentDate:any,\r\n    handleDateChange:(e:any,value:any)=>void\r\n}\r\n\r\nfunction getListItemStyle(match:boolean) {\r\n    if(match){\r\n        return {\r\n            backgroundColor: 'grey',\r\n        };\r\n    }\r\n}\r\nexport const DateNavigator:React.SFC<IDateNavigatorProps> =(props) => {\r\n        let dates;\r\n        dates = props.dates.map((date:any) => {\r\n               return <ListItem \r\n               button \r\n               component={\"a\"} \r\n               value={date} \r\n               onClick={e => props.handleDateChange(e,date)}\r\n               style={getListItemStyle(date === props.currentDate)}>\r\n               {date}\r\n               </ListItem>\r\n           })\r\n        \r\n        return(\r\n            <Grid item xs={2}>\r\n                <h4 style={{paddingLeft:'1rem'}}>Choose Date:</h4>\r\n                <List component={\"nav\"}>\r\n                    {dates}\r\n                </List>\r\n            </Grid>\r\n        )\r\n}\r\n\r\nexport default DateNavigator;","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\n\r\ninterface IWeatherCardsProps{\r\n    WeatherCardData:[]\r\n}\r\n\r\nexport const WeatherCards: React.SFC<IWeatherCardsProps> = (props) => {\r\n        let cards;\r\n        cards = props.WeatherCardData.map((cardData:any)=>{\r\n            return (\r\n                <Grid item xs={\"auto\"}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography>\r\n                               Time: {cardData.dt_txt.split(' ')[1]}\r\n                            </Typography>\r\n                            <Typography variant=\"h3\">\r\n                                {cardData.weather[0].description}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Max Temp: {cardData.main.temp_max}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Min Temp: {cardData.main.temp_min}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Pressure: {cardData.main.pressure}\r\n                            </Typography>\r\n                            <Typography>\r\n                                Humidity: {cardData.main.humidity}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            )\r\n        })\r\n        return(\r\n            <Grid item xs={10}>\r\n                <Grid container spacing={24} style={{flexGrow:1}}>\r\n                   {cards}\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n}\r\n\r\nexport default WeatherCards;","import React from 'react';\r\nimport {DateNavigator} from '../component/DateNavigator';\r\nimport {WeatherCards} from '../component/WeatherCards';\r\nimport * as _ from 'lodash';\r\nimport { Grid } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\ninterface IWeatherReportProps{\r\n    weatherData:any\r\n}\r\ninterface IWeatherReportStates{\r\n    date:any,\r\n    cardsData:any,\r\n    currentDate:any\r\n}\r\n\r\nexport class WeatherReport extends React.Component<IWeatherReportProps,IWeatherReportStates>{\r\n    public availableDates:Array<string>;\r\n    constructor(props:any) {\r\n        super(props);\r\n        this.state = {cardsData:null, date:null, currentDate:null};\r\n        this.availableDates = [];\r\n        this.handleDateChange = this.handleDateChange.bind(this);\r\n        this.setCardData = this.setCardData.bind(this);\r\n        this.fetchAvailableDates();\r\n    }\r\n\r\n    fetchAvailableDates(){\r\n        this.props.weatherData.list.map((element:any) => {\r\n            element = element.dt_txt.split(' ')[0];\r\n            if(this.availableDates.indexOf(element) === -1){\r\n                this.availableDates.push(element);\r\n            }\r\n        })\r\n    }\r\n    componentWillMount(){\r\n        this.setCardData(this.availableDates[0]);\r\n    }\r\n\r\n    handleDateChange(e:any,value:any){\r\n       this.setCardData(value);\r\n    }\r\n\r\n    setCardData(date:any){\r\n        let data = _.filter(this.props.weatherData.list,(element:any) =>{\r\n           return element.dt_txt.split(' ')[0] === date;\r\n        })\r\n        this.setState({\r\n            currentDate: date,\r\n            cardsData:_.cloneDeep(data)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Grid container spacing={8}>\r\n                <DateNavigator dates={this.availableDates} handleDateChange={this.handleDateChange} currentDate={this.state.currentDate}/>\r\n                {!!this.state.cardsData && <WeatherCards WeatherCardData={this.state.cardsData}/>}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherReport;\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport {Header} from '../component/Header';\r\nimport {WeatherReport} from '../component/WeatherReport';\r\nimport * as _ from 'lodash';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\ninterface IWebAppStates{\r\n    xCoordinate: Number,\r\n    yCoordinate:Number,\r\n    weatherData:any,\r\n    isBusy:boolean\r\n}\r\n\r\ninterface IWebAppProps{\r\n    store:any\r\n}\r\n\r\nexport class WebApp extends React.Component<IWebAppProps, IWebAppStates>{\r\n    private cityName:string = '';\r\n    constructor(props:any){\r\n        super(props);\r\n        this.state = {xCoordinate:30.734301,yCoordinate:76.793297,weatherData:null,isBusy:false};\r\n        this.setCurrentLocation = this.setCurrentLocation.bind(this);\r\n    }\r\n\r\n    setCurrentLocation(){\r\n        navigator.geolocation.getCurrentPosition((position)=>{\r\n            if(position){\r\n                this.setState({\r\n                    xCoordinate:position.coords.latitude,\r\n                    yCoordinate:position.coords.longitude\r\n                })\r\n            }\r\n            this.getData();\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps:any,nextState:any){\r\n        if(!this.state.weatherData || (!!this.state.weatherData && this.state.weatherData.city.name !== nextState.weatherData.city.name)){\r\n            return true;\r\n        }\r\n        if(this.state.isBusy !== nextState.isBusy){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        this.setState({\r\n             isBusy:true\r\n        })\r\n        fetch('https://cors-anywhere.herokuapp.com/api.openweathermap.org/data/2.5/forecast?lat='+ this.state.xCoordinate +'&lon='+ this.state.yCoordinate +'&appid=0cefc283fa0c3ad68584e2c30b643c94&units=metric',\r\n        {\r\n            headers:{'Content-Type': 'text/plain','Access-Type':'application/json'},\r\n        })\r\n        .then((data:any)=>{\r\n           return data.json();\r\n        })\r\n        .then((data)=>{\r\n            this.cityName = data.city.name;\r\n            this.setState({\r\n                isBusy:false,\r\n                weatherData:_.cloneDeep(data) \r\n            })\r\n        })\r\n    }\r\n    \r\n    renderRedirect(){\r\n        if (!localStorage.getItem('userName') || localStorage.getItem('userName')!.length == 0) {\r\n          return <Redirect to='/login' />\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let weatherReport;\r\n        let spinner;\r\n        weatherReport = <div id=\"weatherReport\">\r\n            <Header store={this.props.store} cityName={this.cityName} setCurrentLocation={this.setCurrentLocation}/>\r\n            {!!this.state.weatherData && <WeatherReport weatherData={this.state.weatherData}/>}\r\n        </div>\r\n        spinner = <CircularProgress style={{position:'fixed',top:'50%',right:'50%',left:'50%',bottom:'50%'}} size={100}></CircularProgress>\r\n        return(\r\n            <React.Fragment>\r\n                {this.renderRedirect()}\r\n                {this.state.isBusy? spinner: weatherReport}\r\n            </React.Fragment> \r\n        )\r\n    }\r\n}\r\n\r\nexport default WebApp;\r\n","const initialState = {\r\n    userName:'',\r\n    password:''\r\n  }\r\nexport default (state = initialState, action:any) => {\r\n    switch (action.type) {\r\n      case 'LOGIN':{\r\n            localStorage.setItem('userName',action.payload.userName);\r\n            console.log(\"welcome\"+ action.userName);\r\n            return Object.assign({}, state, {\r\n                userName: action.payload.userName\r\n            });\r\n            break;\r\n        }\r\n      case 'LOGOUT':{\r\n            localStorage.setItem('userName','');\r\n            console.log(\"Bye Bye\");\r\n            return Object.assign({}, state, {\r\n                userName: action.payload.username\r\n            });\r\n            break;\r\n        }\r\n      default:\r\n        return Object.assign({}, state, {\r\n            userName: localStorage.getItem('userName'),\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Login from './component/Login';\nimport WebApp from './component/WebApp'\nimport {createStore} from 'redux';\nimport myApp from './service/Reducer';\nimport {HashRouter, Route, Redirect} from 'react-router-dom';\n\nlet store = createStore(myApp);\n\nconst routing = (\n    <HashRouter>\n        <div style={{height:\"100%\"}} >\n            <Redirect exact from= '/' to= '/login'></Redirect>\n            <Route  path='/login' render={(props) => <Login store={store}/>} />\n            <Route  path= '/webApp' render={(props) => <WebApp store={store}/>}  /> \n        </div>\n    </HashRouter>\n)\nfunction render(){\n    ReactDOM.render(routing, document.getElementById('root'));\n}\n\nstore.subscribe(render);\n\nrender();"],"sourceRoot":""}